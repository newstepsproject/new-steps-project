#!/bin/bash
# test-build-analysis.sh - Layer 1: Build-Time Analysis

echo "üîç LAYER 1: BUILD-TIME ANALYSIS"
echo "================================"

# Clean build
rm -rf .next
echo "üì¶ Starting fresh build..."

# Capture build output
npm run build 2>&1 | tee build-output.log

# Analyze static vs dynamic pages
echo -e "\nüìä PAGE RENDERING ANALYSIS:"
echo "Static Pages (‚óã):"
grep "‚óã" build-output.log | grep -v "api" || echo "  None found"

echo -e "\nDynamic Pages (∆í):"
grep "∆í" build-output.log | grep -v "api" || echo "  None found"

# Check for unexpected static pages
CRITICAL_DYNAMIC_PAGES=("/about" "/admin" "/account")
echo -e "\n‚ö†Ô∏è  CRITICAL PAGE VALIDATION:"

for page in "${CRITICAL_DYNAMIC_PAGES[@]}"; do
    if grep -q "‚óã.*$page" build-output.log; then
        echo "‚ùå CRITICAL: $page is static but should be dynamic!"
        exit 1
    else
        echo "‚úÖ $page is properly dynamic"
    fi
done

# Check for build-time errors
if grep -q "Error fetching app settings" build-output.log; then
    echo "‚ö†Ô∏è  WARNING: Database calls failing during build"
    grep "Error fetching app settings" build-output.log
fi

echo -e "\n‚úÖ Build analysis complete"
